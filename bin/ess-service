#!/bin/bash
#
# Event Streaming Service
# Start/Stop/Status
#

CurrentDir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
RootDir="$( dirname "$CurrentDir" )"

# PID file location and logs
PIDFILE=/tmp/ess.pid
LOGFILE=/tmp/ess.log

# application
SITE_PACKAGES_PATH=`python -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())"`
if [ -f ${SITE_PACKAGES_PATH}/ess/daemons/main.py ]; then
    PROGNAME=${SITE_PACKAGES_PATH}/ess/daemons/main.py
elif [ -f ${RootDir}/lib/ess/daemons/main.py ]; then
    PROGNAME=${RootDir}/lib/ess/daemons/main.py
else
    PROGNAME=${RootDir}/lib/ess/daemons/main.py
fi

# application config
export ESS_CONFIG=/etc/ess/ess.cfg

. /etc/rc.d/init.d/functions

status() {
    echo "=================== Status ==================="
    echo $PROGNAME
    echo "================================================"

    if [ -f $PID ]
    then
        echo
        echo "Pid file: $( cat $PID ) [$PID]"
        echo
        ps -ef | grep -v grep | grep $( cat $PID )
    else
        echo
        echo "No Pid file"
    fi
}

start() {
    if [ -f $PID ]
    then
        echo
        echo "ESS is already started. PID: [$( cat $PID )]"
    else
        echo "=================== Starting ==================="
        echo $PROGNAME
        echo "================================================"
        if [ -f $PROGNAME ]; then
            nohup python $PROGNAME >>$LOG 2>&1 &
            sleep 1
            ps -p `cat $PIDFILE` > /dev/null
            ERROR=$?
	    echo $ERROR
            if [ $ERROR = 0 ]; then
                echo "Successfully started"
            else
                echo "Error... "
                /bin/rm $PID
            fi
        else
            echo "$PROGNAME doesn't exist. Quit!"
        fi
    fi
}

stop() {
    echo "=================== Stopping ==================="
    echo $PROGNAME
    echo "================================================"

    if [ -f $PID ]
    then
        [ -f "$PID" ] && read line < "$PID"
        if [ -d "/proc/$line" ]
        then
  	      kill $line
              [ $? -eq 0 ] && echo " [ OK ] " || echo " [ FAILED ] "
              [ -f "$PID" ] && rm -f "$PID"
	fi
    else
        echo "No pid file. Already stopped?"
    fi
}

case "$1" in
    'start')
            start
            ;;
    'stop')
            stop
            ;;
    'restart')
            stop ; echo "Sleeping..."; sleep 1 ;
            start
            ;;
    'status')
            status
            ;;
    *)
            echo
            echo "Usage: $0 { start | stop | restart | status }"
            echo
            exit 1
            ;;
esac

exit 0
